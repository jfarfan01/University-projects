# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: netcode.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nim_pb2 as nim__pb2
import dots_and_boxes_pb2 as dots__and__boxes__pb2
import dominect_pb2 as dominect__pb2
import dozo_pb2 as dozo__pb2
import tak_pb2 as tak__pb2
import tko_pb2 as tko__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='netcode.proto',
  package='netcode',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\rnetcode.proto\x12\x07netcode\x1a\tnim.proto\x1a\x14\x64ots-and-boxes.proto\x1a\x0e\x64ominect.proto\x1a\ndozo.proto\x1a\ttak.proto\x1a\ttko.proto\"1\n\nAuthPacket\x12\x13\n\x0bmatr_number\x18\x01 \x01(\t\x12\x0e\n\x06secret\x18\x02 \x01(\t\"8\n\rMatchIDPacket\x12\x12\n\nuser_token\x18\x01 \x01(\t\x12\x13\n\x0bmatch_token\x18\x02 \x01(\t\"\x1e\n\x08IDPacket\x12\x12\n\nuser_token\x18\x01 \x01(\t\"-\n\x12GetTimeoutResponse\x12\x17\n\x0ftimeout_seconds\x18\x01 \x01(\r\"K\n\x13SetPseudonymRequest\x12!\n\x04\x61uth\x18\x01 \x01(\x0b\x32\x13.netcode.AuthPacket\x12\x11\n\tpseudonym\x18\x02 \x01(\t\"\xc5\x01\n\x14SetPseudonymResponse\x12;\n\nerror_code\x18\x01 \x01(\x0e\x32\'.netcode.SetPseudonymResponse.ErrorCode\"p\n\tErrorCode\x12\x13\n\x0fUNDEFINED_ERROR\x10\x00\x12\x06\n\x02OK\x10\x01\x12\x14\n\x10REQUEST_REJECTED\x10\x02\x12\x10\n\x0c\x41LREADY_USED\x10\x03\x12\x0c\n\x08TOO_LONG\x10\x04\x12\x10\n\x0c\x45MPTY_FIELDS\x10\x05\"*\n\x14GetUserTokenResponse\x12\x12\n\nuser_token\x18\x01 \x01(\t\"_\n\x17UserRegistrationRequest\x12\x10\n\x08\x66ullname\x18\x01 \x01(\t\x12\r\n\x05\x65mail\x18\x02 \x01(\t\x12\x13\n\x0bmatr_number\x18\x03 \x01(\t\x12\x0e\n\x06secret\x18\x04 \x01(\t\"\xbf\x01\n\x18UserRegistrationResponse\x12?\n\nerror_code\x18\x01 \x01(\x0e\x32+.netcode.UserRegistrationResponse.ErrorCode\"b\n\tErrorCode\x12\x13\n\x0fUNDEFINED_ERROR\x10\x00\x12\x06\n\x02OK\x10\x01\x12\x15\n\x11INVALID_PARAMETER\x10\x02\x12\x10\n\x0c\x45MPTY_FIELDS\x10\x03\x12\x0f\n\x0bNOT_ALLOWED\x10\x04\"R\n\x18GroupRegistrationRequest\x12!\n\x04\x61uth\x18\x01 \x01(\x0b\x32\x13.netcode.AuthPacket\x12\x13\n\x0bmatr_number\x18\x02 \x03(\t\"\xe4\x01\n\x19GroupRegistrationResponse\x12@\n\nerror_code\x18\x01 \x01(\x0e\x32,.netcode.GroupRegistrationResponse.ErrorCode\"\x84\x01\n\tErrorCode\x12\x13\n\x0fUNDEFINED_ERROR\x10\x00\x12\x06\n\x02OK\x10\x01\x12\x10\n\x0cUNKNOWN_USER\x10\x02\x12\x1a\n\x16TOO_MANY_GROUP_MEMBERS\x10\x03\x12\x1b\n\x17USER_ALREADY_REGISTERED\x10\x04\x12\x0f\n\x0b\x41UTH_FAILED\x10\x05\")\n\x0f\x44irectChallenge\x12\x16\n\x0euser_pseudonym\x18\x01 \x01(\t\"\x8a\x01\n\x14MatchmakingParameter\x12-\n\x11random_is_default\x18\n \x01(\x0b\x32\x10.netcode.NothingH\x00\x12\x36\n\x12\x64irect_matchmaking\x18\x0b \x01(\x0b\x32\x18.netcode.DirectChallengeH\x00\x42\x0b\n\tparameter\"\xde\x03\n\x0cMatchRequest\x12\x12\n\nuser_token\x18\x01 \x01(\t\x12\x12\n\ngame_token\x18\x02 \x01(\t\x12=\n\x16matchmaking_parameters\x18\x03 \x01(\x0b\x32\x1d.netcode.MatchmakingParameter\x12\"\n\x1atimeout_suggestion_seconds\x18\x04 \x01(\r\x12\x31\n\x13nim_game_parameters\x18\n \x01(\x0b\x32\x12.nim.GameParameterH\x00\x12\x31\n\x13\x64\x61\x62_game_parameters\x18\x0b \x01(\x0b\x32\x12.dab.GameParameterH\x00\x12\x31\n\x13\x64om_game_parameters\x18\x0c \x01(\x0b\x32\x12.dom.GameParameterH\x00\x12\x31\n\x13\x64zo_game_parameters\x18\r \x01(\x0b\x32\x12.dzo.GameParameterH\x00\x12\x31\n\x13tak_game_parameters\x18\x0e \x01(\x0b\x32\x12.tak.GameParameterH\x00\x12\x31\n\x13tko_game_parameters\x18\x0f \x01(\x0b\x32\x12.tko.GameParameterH\x00\x42\x11\n\x0fgame_parameters\">\n\rMatchResponse\x12\x13\n\x0bmatch_token\x18\x01 \x01(\t\x12\x18\n\x10\x62\x65ginning_player\x18\x02 \x01(\x08\"\xb4\x02\n\x0bTurnRequest\x12(\n\x08match_id\x18\x01 \x01(\x0b\x32\x16.netcode.MatchIDPacket\x12&\n\rnim_game_turn\x18\n \x01(\x0b\x32\r.nim.GameTurnH\x00\x12&\n\rdab_game_turn\x18\x0b \x01(\x0b\x32\r.dab.GameTurnH\x00\x12&\n\rdom_game_turn\x18\x0c \x01(\x0b\x32\r.dom.GameTurnH\x00\x12&\n\rdzo_game_turn\x18\r \x01(\x0b\x32\r.dzo.GameTurnH\x00\x12&\n\rtak_game_turn\x18\x0e \x01(\x0b\x32\r.tak.GameTurnH\x00\x12&\n\rtko_game_turn\x18\x0f \x01(\x0b\x32\r.tko.GameTurnH\x00\x42\x0b\n\tgame_turn\"\xc2\x02\n\x0cTurnResponse\x12(\n\x0bturn_status\x18\x01 \x01(\x0e\x32\x13.netcode.TurnStatus\x12(\n\x0enim_game_state\x18\n \x01(\x0b\x32\x0e.nim.GameStateH\x00\x12(\n\x0e\x64\x61\x62_game_state\x18\x0b \x01(\x0b\x32\x0e.dab.GameStateH\x00\x12(\n\x0e\x64om_game_state\x18\x0c \x01(\x0b\x32\x0e.dom.GameStateH\x00\x12(\n\x0e\x64zo_game_state\x18\r \x01(\x0b\x32\x0e.dzo.GameStateH\x00\x12(\n\x0etak_game_state\x18\x0e \x01(\x0b\x32\x0e.tak.GameStateH\x00\x12(\n\x0etko_game_state\x18\x0f \x01(\x0b\x32\x0e.tko.GameStateH\x00\x42\x0c\n\ngame_state\"\xe1\x02\n\x11GameStateResponse\x12(\n\x0bgame_status\x18\x01 \x01(\x0e\x32\x13.netcode.GameStatus\x12\x18\n\x10\x62\x65ginning_player\x18\x02 \x01(\x08\x12(\n\x0enim_game_state\x18\n \x01(\x0b\x32\x0e.nim.GameStateH\x00\x12(\n\x0e\x64\x61\x62_game_state\x18\x0b \x01(\x0b\x32\x0e.dab.GameStateH\x00\x12(\n\x0e\x64om_game_state\x18\x0c \x01(\x0b\x32\x0e.dom.GameStateH\x00\x12(\n\x0e\x64zo_game_state\x18\r \x01(\x0b\x32\x0e.dzo.GameStateH\x00\x12(\n\x0etak_game_state\x18\x0e \x01(\x0b\x32\x0e.tak.GameStateH\x00\x12(\n\x0etko_game_state\x18\x0f \x01(\x0b\x32\x0e.tko.GameStateH\x00\x42\x0c\n\ngame_state\"0\n\tEloValues\x12\x10\n\x08user_elo\x18\x01 \x01(\x01\x12\x11\n\tgroup_elo\x18\x02 \x01(\x01\"h\n\x14OpponentInfoResponse\x12\x16\n\x0euser_pseudonym\x18\x01 \x01(\t\x12\x17\n\x0fgroup_pseudonym\x18\x02 \x01(\t\x12\x1f\n\x03\x65lo\x18\x03 \x01(\x0b\x32\x12.netcode.EloValues\"\t\n\x07Nothing*I\n\nTurnStatus\x12\x06\n\x02OK\x10\x00\x12\x10\n\x0cINVALID_TURN\x10\x01\x12\x11\n\rNOT_YOUR_TURN\x10\x02\x12\x0e\n\nMATCH_OVER\x10\x03*\x82\x01\n\nGameStatus\x12\r\n\tYOUR_TURN\x10\x00\x12\x12\n\x0eOPPONENTS_TURN\x10\x01\x12\r\n\tMATCH_WON\x10\x03\x12\x0e\n\nMATCH_LOST\x10\x04\x12\x08\n\x04\x44RAW\x10\x05\x12\x15\n\x11MATCH_NOT_STARTED\x10\x06\x12\x11\n\rMATCH_ABORTED\x10\x07\x32\xd5\x06\n\x07GameCom\x12\x39\n\x08NewMatch\x12\x15.netcode.MatchRequest\x1a\x16.netcode.MatchResponse\x12\x39\n\nSubmitTurn\x12\x14.netcode.TurnRequest\x1a\x15.netcode.TurnResponse\x12\x42\n\x0cGetGameState\x12\x16.netcode.MatchIDPacket\x1a\x1a.netcode.GameStateResponse\x12\x41\n\nGetTimeout\x12\x16.netcode.MatchIDPacket\x1a\x1b.netcode.GetTimeoutResponse\x12H\n\x0fGetOpponentInfo\x12\x16.netcode.MatchIDPacket\x1a\x1d.netcode.OpponentInfoResponse\x12\x36\n\nAbortMatch\x12\x16.netcode.MatchIDPacket\x1a\x10.netcode.Nothing\x12/\n\x06GetElo\x12\x11.netcode.IDPacket\x1a\x12.netcode.EloValues\x12W\n\x10UserRegistration\x12 .netcode.UserRegistrationRequest\x1a!.netcode.UserRegistrationResponse\x12Z\n\x11GroupRegistration\x12!.netcode.GroupRegistrationRequest\x1a\".netcode.GroupRegistrationResponse\x12P\n\x11SetGroupPseudonym\x12\x1c.netcode.SetPseudonymRequest\x1a\x1d.netcode.SetPseudonymResponse\x12O\n\x10SetUserPseudonym\x12\x1c.netcode.SetPseudonymRequest\x1a\x1d.netcode.SetPseudonymResponse\x12\x42\n\x0cGetUserToken\x12\x13.netcode.AuthPacket\x1a\x1d.netcode.GetUserTokenResponseb\x06proto3'
  ,
  dependencies=[nim__pb2.DESCRIPTOR,dots__and__boxes__pb2.DESCRIPTOR,dominect__pb2.DESCRIPTOR,dozo__pb2.DESCRIPTOR,tak__pb2.DESCRIPTOR,tko__pb2.DESCRIPTOR,])

_TURNSTATUS = _descriptor.EnumDescriptor(
  name='TurnStatus',
  full_name='netcode.TurnStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_TURN', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NOT_YOUR_TURN', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MATCH_OVER', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3112,
  serialized_end=3185,
)
_sym_db.RegisterEnumDescriptor(_TURNSTATUS)

TurnStatus = enum_type_wrapper.EnumTypeWrapper(_TURNSTATUS)
_GAMESTATUS = _descriptor.EnumDescriptor(
  name='GameStatus',
  full_name='netcode.GameStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='YOUR_TURN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OPPONENTS_TURN', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MATCH_WON', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MATCH_LOST', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DRAW', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MATCH_NOT_STARTED', index=5, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MATCH_ABORTED', index=6, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3188,
  serialized_end=3318,
)
_sym_db.RegisterEnumDescriptor(_GAMESTATUS)

GameStatus = enum_type_wrapper.EnumTypeWrapper(_GAMESTATUS)
OK = 0
INVALID_TURN = 1
NOT_YOUR_TURN = 2
MATCH_OVER = 3
YOUR_TURN = 0
OPPONENTS_TURN = 1
MATCH_WON = 3
MATCH_LOST = 4
DRAW = 5
MATCH_NOT_STARTED = 6
MATCH_ABORTED = 7


_SETPSEUDONYMRESPONSE_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='netcode.SetPseudonymResponse.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED_ERROR', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='REQUEST_REJECTED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ALREADY_USED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOO_LONG', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EMPTY_FIELDS', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=460,
  serialized_end=572,
)
_sym_db.RegisterEnumDescriptor(_SETPSEUDONYMRESPONSE_ERRORCODE)

_USERREGISTRATIONRESPONSE_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='netcode.UserRegistrationResponse.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED_ERROR', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_PARAMETER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EMPTY_FIELDS', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NOT_ALLOWED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=809,
  serialized_end=907,
)
_sym_db.RegisterEnumDescriptor(_USERREGISTRATIONRESPONSE_ERRORCODE)

_GROUPREGISTRATIONRESPONSE_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='netcode.GroupRegistrationResponse.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED_ERROR', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_USER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOO_MANY_GROUP_MEMBERS', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='USER_ALREADY_REGISTERED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AUTH_FAILED', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1090,
  serialized_end=1222,
)
_sym_db.RegisterEnumDescriptor(_GROUPREGISTRATIONRESPONSE_ERRORCODE)


_AUTHPACKET = _descriptor.Descriptor(
  name='AuthPacket',
  full_name='netcode.AuthPacket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='matr_number', full_name='netcode.AuthPacket.matr_number', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='secret', full_name='netcode.AuthPacket.secret', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=158,
)


_MATCHIDPACKET = _descriptor.Descriptor(
  name='MatchIDPacket',
  full_name='netcode.MatchIDPacket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_token', full_name='netcode.MatchIDPacket.user_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_token', full_name='netcode.MatchIDPacket.match_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=216,
)


_IDPACKET = _descriptor.Descriptor(
  name='IDPacket',
  full_name='netcode.IDPacket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_token', full_name='netcode.IDPacket.user_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=218,
  serialized_end=248,
)


_GETTIMEOUTRESPONSE = _descriptor.Descriptor(
  name='GetTimeoutResponse',
  full_name='netcode.GetTimeoutResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeout_seconds', full_name='netcode.GetTimeoutResponse.timeout_seconds', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=250,
  serialized_end=295,
)


_SETPSEUDONYMREQUEST = _descriptor.Descriptor(
  name='SetPseudonymRequest',
  full_name='netcode.SetPseudonymRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='auth', full_name='netcode.SetPseudonymRequest.auth', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pseudonym', full_name='netcode.SetPseudonymRequest.pseudonym', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=372,
)


_SETPSEUDONYMRESPONSE = _descriptor.Descriptor(
  name='SetPseudonymResponse',
  full_name='netcode.SetPseudonymResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_code', full_name='netcode.SetPseudonymResponse.error_code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SETPSEUDONYMRESPONSE_ERRORCODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=572,
)


_GETUSERTOKENRESPONSE = _descriptor.Descriptor(
  name='GetUserTokenResponse',
  full_name='netcode.GetUserTokenResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_token', full_name='netcode.GetUserTokenResponse.user_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=574,
  serialized_end=616,
)


_USERREGISTRATIONREQUEST = _descriptor.Descriptor(
  name='UserRegistrationRequest',
  full_name='netcode.UserRegistrationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fullname', full_name='netcode.UserRegistrationRequest.fullname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='email', full_name='netcode.UserRegistrationRequest.email', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='matr_number', full_name='netcode.UserRegistrationRequest.matr_number', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='secret', full_name='netcode.UserRegistrationRequest.secret', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=618,
  serialized_end=713,
)


_USERREGISTRATIONRESPONSE = _descriptor.Descriptor(
  name='UserRegistrationResponse',
  full_name='netcode.UserRegistrationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_code', full_name='netcode.UserRegistrationResponse.error_code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _USERREGISTRATIONRESPONSE_ERRORCODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=716,
  serialized_end=907,
)


_GROUPREGISTRATIONREQUEST = _descriptor.Descriptor(
  name='GroupRegistrationRequest',
  full_name='netcode.GroupRegistrationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='auth', full_name='netcode.GroupRegistrationRequest.auth', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='matr_number', full_name='netcode.GroupRegistrationRequest.matr_number', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=909,
  serialized_end=991,
)


_GROUPREGISTRATIONRESPONSE = _descriptor.Descriptor(
  name='GroupRegistrationResponse',
  full_name='netcode.GroupRegistrationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_code', full_name='netcode.GroupRegistrationResponse.error_code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _GROUPREGISTRATIONRESPONSE_ERRORCODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=994,
  serialized_end=1222,
)


_DIRECTCHALLENGE = _descriptor.Descriptor(
  name='DirectChallenge',
  full_name='netcode.DirectChallenge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_pseudonym', full_name='netcode.DirectChallenge.user_pseudonym', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1224,
  serialized_end=1265,
)


_MATCHMAKINGPARAMETER = _descriptor.Descriptor(
  name='MatchmakingParameter',
  full_name='netcode.MatchmakingParameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='random_is_default', full_name='netcode.MatchmakingParameter.random_is_default', index=0,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='direct_matchmaking', full_name='netcode.MatchmakingParameter.direct_matchmaking', index=1,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='parameter', full_name='netcode.MatchmakingParameter.parameter',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1268,
  serialized_end=1406,
)


_MATCHREQUEST = _descriptor.Descriptor(
  name='MatchRequest',
  full_name='netcode.MatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_token', full_name='netcode.MatchRequest.user_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='game_token', full_name='netcode.MatchRequest.game_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='matchmaking_parameters', full_name='netcode.MatchRequest.matchmaking_parameters', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout_suggestion_seconds', full_name='netcode.MatchRequest.timeout_suggestion_seconds', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nim_game_parameters', full_name='netcode.MatchRequest.nim_game_parameters', index=4,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dab_game_parameters', full_name='netcode.MatchRequest.dab_game_parameters', index=5,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dom_game_parameters', full_name='netcode.MatchRequest.dom_game_parameters', index=6,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dzo_game_parameters', full_name='netcode.MatchRequest.dzo_game_parameters', index=7,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tak_game_parameters', full_name='netcode.MatchRequest.tak_game_parameters', index=8,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tko_game_parameters', full_name='netcode.MatchRequest.tko_game_parameters', index=9,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='game_parameters', full_name='netcode.MatchRequest.game_parameters',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1409,
  serialized_end=1887,
)


_MATCHRESPONSE = _descriptor.Descriptor(
  name='MatchResponse',
  full_name='netcode.MatchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_token', full_name='netcode.MatchResponse.match_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='beginning_player', full_name='netcode.MatchResponse.beginning_player', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1889,
  serialized_end=1951,
)


_TURNREQUEST = _descriptor.Descriptor(
  name='TurnRequest',
  full_name='netcode.TurnRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_id', full_name='netcode.TurnRequest.match_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nim_game_turn', full_name='netcode.TurnRequest.nim_game_turn', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dab_game_turn', full_name='netcode.TurnRequest.dab_game_turn', index=2,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dom_game_turn', full_name='netcode.TurnRequest.dom_game_turn', index=3,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dzo_game_turn', full_name='netcode.TurnRequest.dzo_game_turn', index=4,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tak_game_turn', full_name='netcode.TurnRequest.tak_game_turn', index=5,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tko_game_turn', full_name='netcode.TurnRequest.tko_game_turn', index=6,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='game_turn', full_name='netcode.TurnRequest.game_turn',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1954,
  serialized_end=2262,
)


_TURNRESPONSE = _descriptor.Descriptor(
  name='TurnResponse',
  full_name='netcode.TurnResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='turn_status', full_name='netcode.TurnResponse.turn_status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nim_game_state', full_name='netcode.TurnResponse.nim_game_state', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dab_game_state', full_name='netcode.TurnResponse.dab_game_state', index=2,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dom_game_state', full_name='netcode.TurnResponse.dom_game_state', index=3,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dzo_game_state', full_name='netcode.TurnResponse.dzo_game_state', index=4,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tak_game_state', full_name='netcode.TurnResponse.tak_game_state', index=5,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tko_game_state', full_name='netcode.TurnResponse.tko_game_state', index=6,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='game_state', full_name='netcode.TurnResponse.game_state',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2265,
  serialized_end=2587,
)


_GAMESTATERESPONSE = _descriptor.Descriptor(
  name='GameStateResponse',
  full_name='netcode.GameStateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='game_status', full_name='netcode.GameStateResponse.game_status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='beginning_player', full_name='netcode.GameStateResponse.beginning_player', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nim_game_state', full_name='netcode.GameStateResponse.nim_game_state', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dab_game_state', full_name='netcode.GameStateResponse.dab_game_state', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dom_game_state', full_name='netcode.GameStateResponse.dom_game_state', index=4,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dzo_game_state', full_name='netcode.GameStateResponse.dzo_game_state', index=5,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tak_game_state', full_name='netcode.GameStateResponse.tak_game_state', index=6,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tko_game_state', full_name='netcode.GameStateResponse.tko_game_state', index=7,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='game_state', full_name='netcode.GameStateResponse.game_state',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2590,
  serialized_end=2943,
)


_ELOVALUES = _descriptor.Descriptor(
  name='EloValues',
  full_name='netcode.EloValues',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_elo', full_name='netcode.EloValues.user_elo', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='group_elo', full_name='netcode.EloValues.group_elo', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2945,
  serialized_end=2993,
)


_OPPONENTINFORESPONSE = _descriptor.Descriptor(
  name='OpponentInfoResponse',
  full_name='netcode.OpponentInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_pseudonym', full_name='netcode.OpponentInfoResponse.user_pseudonym', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='group_pseudonym', full_name='netcode.OpponentInfoResponse.group_pseudonym', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='elo', full_name='netcode.OpponentInfoResponse.elo', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2995,
  serialized_end=3099,
)


_NOTHING = _descriptor.Descriptor(
  name='Nothing',
  full_name='netcode.Nothing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3101,
  serialized_end=3110,
)

_SETPSEUDONYMREQUEST.fields_by_name['auth'].message_type = _AUTHPACKET
_SETPSEUDONYMRESPONSE.fields_by_name['error_code'].enum_type = _SETPSEUDONYMRESPONSE_ERRORCODE
_SETPSEUDONYMRESPONSE_ERRORCODE.containing_type = _SETPSEUDONYMRESPONSE
_USERREGISTRATIONRESPONSE.fields_by_name['error_code'].enum_type = _USERREGISTRATIONRESPONSE_ERRORCODE
_USERREGISTRATIONRESPONSE_ERRORCODE.containing_type = _USERREGISTRATIONRESPONSE
_GROUPREGISTRATIONREQUEST.fields_by_name['auth'].message_type = _AUTHPACKET
_GROUPREGISTRATIONRESPONSE.fields_by_name['error_code'].enum_type = _GROUPREGISTRATIONRESPONSE_ERRORCODE
_GROUPREGISTRATIONRESPONSE_ERRORCODE.containing_type = _GROUPREGISTRATIONRESPONSE
_MATCHMAKINGPARAMETER.fields_by_name['random_is_default'].message_type = _NOTHING
_MATCHMAKINGPARAMETER.fields_by_name['direct_matchmaking'].message_type = _DIRECTCHALLENGE
_MATCHMAKINGPARAMETER.oneofs_by_name['parameter'].fields.append(
  _MATCHMAKINGPARAMETER.fields_by_name['random_is_default'])
_MATCHMAKINGPARAMETER.fields_by_name['random_is_default'].containing_oneof = _MATCHMAKINGPARAMETER.oneofs_by_name['parameter']
_MATCHMAKINGPARAMETER.oneofs_by_name['parameter'].fields.append(
  _MATCHMAKINGPARAMETER.fields_by_name['direct_matchmaking'])
_MATCHMAKINGPARAMETER.fields_by_name['direct_matchmaking'].containing_oneof = _MATCHMAKINGPARAMETER.oneofs_by_name['parameter']
_MATCHREQUEST.fields_by_name['matchmaking_parameters'].message_type = _MATCHMAKINGPARAMETER
_MATCHREQUEST.fields_by_name['nim_game_parameters'].message_type = nim__pb2._GAMEPARAMETER
_MATCHREQUEST.fields_by_name['dab_game_parameters'].message_type = dots__and__boxes__pb2._GAMEPARAMETER
_MATCHREQUEST.fields_by_name['dom_game_parameters'].message_type = dominect__pb2._GAMEPARAMETER
_MATCHREQUEST.fields_by_name['dzo_game_parameters'].message_type = dozo__pb2._GAMEPARAMETER
_MATCHREQUEST.fields_by_name['tak_game_parameters'].message_type = tak__pb2._GAMEPARAMETER
_MATCHREQUEST.fields_by_name['tko_game_parameters'].message_type = tko__pb2._GAMEPARAMETER
_MATCHREQUEST.oneofs_by_name['game_parameters'].fields.append(
  _MATCHREQUEST.fields_by_name['nim_game_parameters'])
_MATCHREQUEST.fields_by_name['nim_game_parameters'].containing_oneof = _MATCHREQUEST.oneofs_by_name['game_parameters']
_MATCHREQUEST.oneofs_by_name['game_parameters'].fields.append(
  _MATCHREQUEST.fields_by_name['dab_game_parameters'])
_MATCHREQUEST.fields_by_name['dab_game_parameters'].containing_oneof = _MATCHREQUEST.oneofs_by_name['game_parameters']
_MATCHREQUEST.oneofs_by_name['game_parameters'].fields.append(
  _MATCHREQUEST.fields_by_name['dom_game_parameters'])
_MATCHREQUEST.fields_by_name['dom_game_parameters'].containing_oneof = _MATCHREQUEST.oneofs_by_name['game_parameters']
_MATCHREQUEST.oneofs_by_name['game_parameters'].fields.append(
  _MATCHREQUEST.fields_by_name['dzo_game_parameters'])
_MATCHREQUEST.fields_by_name['dzo_game_parameters'].containing_oneof = _MATCHREQUEST.oneofs_by_name['game_parameters']
_MATCHREQUEST.oneofs_by_name['game_parameters'].fields.append(
  _MATCHREQUEST.fields_by_name['tak_game_parameters'])
_MATCHREQUEST.fields_by_name['tak_game_parameters'].containing_oneof = _MATCHREQUEST.oneofs_by_name['game_parameters']
_MATCHREQUEST.oneofs_by_name['game_parameters'].fields.append(
  _MATCHREQUEST.fields_by_name['tko_game_parameters'])
_MATCHREQUEST.fields_by_name['tko_game_parameters'].containing_oneof = _MATCHREQUEST.oneofs_by_name['game_parameters']
_TURNREQUEST.fields_by_name['match_id'].message_type = _MATCHIDPACKET
_TURNREQUEST.fields_by_name['nim_game_turn'].message_type = nim__pb2._GAMETURN
_TURNREQUEST.fields_by_name['dab_game_turn'].message_type = dots__and__boxes__pb2._GAMETURN
_TURNREQUEST.fields_by_name['dom_game_turn'].message_type = dominect__pb2._GAMETURN
_TURNREQUEST.fields_by_name['dzo_game_turn'].message_type = dozo__pb2._GAMETURN
_TURNREQUEST.fields_by_name['tak_game_turn'].message_type = tak__pb2._GAMETURN
_TURNREQUEST.fields_by_name['tko_game_turn'].message_type = tko__pb2._GAMETURN
_TURNREQUEST.oneofs_by_name['game_turn'].fields.append(
  _TURNREQUEST.fields_by_name['nim_game_turn'])
_TURNREQUEST.fields_by_name['nim_game_turn'].containing_oneof = _TURNREQUEST.oneofs_by_name['game_turn']
_TURNREQUEST.oneofs_by_name['game_turn'].fields.append(
  _TURNREQUEST.fields_by_name['dab_game_turn'])
_TURNREQUEST.fields_by_name['dab_game_turn'].containing_oneof = _TURNREQUEST.oneofs_by_name['game_turn']
_TURNREQUEST.oneofs_by_name['game_turn'].fields.append(
  _TURNREQUEST.fields_by_name['dom_game_turn'])
_TURNREQUEST.fields_by_name['dom_game_turn'].containing_oneof = _TURNREQUEST.oneofs_by_name['game_turn']
_TURNREQUEST.oneofs_by_name['game_turn'].fields.append(
  _TURNREQUEST.fields_by_name['dzo_game_turn'])
_TURNREQUEST.fields_by_name['dzo_game_turn'].containing_oneof = _TURNREQUEST.oneofs_by_name['game_turn']
_TURNREQUEST.oneofs_by_name['game_turn'].fields.append(
  _TURNREQUEST.fields_by_name['tak_game_turn'])
_TURNREQUEST.fields_by_name['tak_game_turn'].containing_oneof = _TURNREQUEST.oneofs_by_name['game_turn']
_TURNREQUEST.oneofs_by_name['game_turn'].fields.append(
  _TURNREQUEST.fields_by_name['tko_game_turn'])
_TURNREQUEST.fields_by_name['tko_game_turn'].containing_oneof = _TURNREQUEST.oneofs_by_name['game_turn']
_TURNRESPONSE.fields_by_name['turn_status'].enum_type = _TURNSTATUS
_TURNRESPONSE.fields_by_name['nim_game_state'].message_type = nim__pb2._GAMESTATE
_TURNRESPONSE.fields_by_name['dab_game_state'].message_type = dots__and__boxes__pb2._GAMESTATE
_TURNRESPONSE.fields_by_name['dom_game_state'].message_type = dominect__pb2._GAMESTATE
_TURNRESPONSE.fields_by_name['dzo_game_state'].message_type = dozo__pb2._GAMESTATE
_TURNRESPONSE.fields_by_name['tak_game_state'].message_type = tak__pb2._GAMESTATE
_TURNRESPONSE.fields_by_name['tko_game_state'].message_type = tko__pb2._GAMESTATE
_TURNRESPONSE.oneofs_by_name['game_state'].fields.append(
  _TURNRESPONSE.fields_by_name['nim_game_state'])
_TURNRESPONSE.fields_by_name['nim_game_state'].containing_oneof = _TURNRESPONSE.oneofs_by_name['game_state']
_TURNRESPONSE.oneofs_by_name['game_state'].fields.append(
  _TURNRESPONSE.fields_by_name['dab_game_state'])
_TURNRESPONSE.fields_by_name['dab_game_state'].containing_oneof = _TURNRESPONSE.oneofs_by_name['game_state']
_TURNRESPONSE.oneofs_by_name['game_state'].fields.append(
  _TURNRESPONSE.fields_by_name['dom_game_state'])
_TURNRESPONSE.fields_by_name['dom_game_state'].containing_oneof = _TURNRESPONSE.oneofs_by_name['game_state']
_TURNRESPONSE.oneofs_by_name['game_state'].fields.append(
  _TURNRESPONSE.fields_by_name['dzo_game_state'])
_TURNRESPONSE.fields_by_name['dzo_game_state'].containing_oneof = _TURNRESPONSE.oneofs_by_name['game_state']
_TURNRESPONSE.oneofs_by_name['game_state'].fields.append(
  _TURNRESPONSE.fields_by_name['tak_game_state'])
_TURNRESPONSE.fields_by_name['tak_game_state'].containing_oneof = _TURNRESPONSE.oneofs_by_name['game_state']
_TURNRESPONSE.oneofs_by_name['game_state'].fields.append(
  _TURNRESPONSE.fields_by_name['tko_game_state'])
_TURNRESPONSE.fields_by_name['tko_game_state'].containing_oneof = _TURNRESPONSE.oneofs_by_name['game_state']
_GAMESTATERESPONSE.fields_by_name['game_status'].enum_type = _GAMESTATUS
_GAMESTATERESPONSE.fields_by_name['nim_game_state'].message_type = nim__pb2._GAMESTATE
_GAMESTATERESPONSE.fields_by_name['dab_game_state'].message_type = dots__and__boxes__pb2._GAMESTATE
_GAMESTATERESPONSE.fields_by_name['dom_game_state'].message_type = dominect__pb2._GAMESTATE
_GAMESTATERESPONSE.fields_by_name['dzo_game_state'].message_type = dozo__pb2._GAMESTATE
_GAMESTATERESPONSE.fields_by_name['tak_game_state'].message_type = tak__pb2._GAMESTATE
_GAMESTATERESPONSE.fields_by_name['tko_game_state'].message_type = tko__pb2._GAMESTATE
_GAMESTATERESPONSE.oneofs_by_name['game_state'].fields.append(
  _GAMESTATERESPONSE.fields_by_name['nim_game_state'])
_GAMESTATERESPONSE.fields_by_name['nim_game_state'].containing_oneof = _GAMESTATERESPONSE.oneofs_by_name['game_state']
_GAMESTATERESPONSE.oneofs_by_name['game_state'].fields.append(
  _GAMESTATERESPONSE.fields_by_name['dab_game_state'])
_GAMESTATERESPONSE.fields_by_name['dab_game_state'].containing_oneof = _GAMESTATERESPONSE.oneofs_by_name['game_state']
_GAMESTATERESPONSE.oneofs_by_name['game_state'].fields.append(
  _GAMESTATERESPONSE.fields_by_name['dom_game_state'])
_GAMESTATERESPONSE.fields_by_name['dom_game_state'].containing_oneof = _GAMESTATERESPONSE.oneofs_by_name['game_state']
_GAMESTATERESPONSE.oneofs_by_name['game_state'].fields.append(
  _GAMESTATERESPONSE.fields_by_name['dzo_game_state'])
_GAMESTATERESPONSE.fields_by_name['dzo_game_state'].containing_oneof = _GAMESTATERESPONSE.oneofs_by_name['game_state']
_GAMESTATERESPONSE.oneofs_by_name['game_state'].fields.append(
  _GAMESTATERESPONSE.fields_by_name['tak_game_state'])
_GAMESTATERESPONSE.fields_by_name['tak_game_state'].containing_oneof = _GAMESTATERESPONSE.oneofs_by_name['game_state']
_GAMESTATERESPONSE.oneofs_by_name['game_state'].fields.append(
  _GAMESTATERESPONSE.fields_by_name['tko_game_state'])
_GAMESTATERESPONSE.fields_by_name['tko_game_state'].containing_oneof = _GAMESTATERESPONSE.oneofs_by_name['game_state']
_OPPONENTINFORESPONSE.fields_by_name['elo'].message_type = _ELOVALUES
DESCRIPTOR.message_types_by_name['AuthPacket'] = _AUTHPACKET
DESCRIPTOR.message_types_by_name['MatchIDPacket'] = _MATCHIDPACKET
DESCRIPTOR.message_types_by_name['IDPacket'] = _IDPACKET
DESCRIPTOR.message_types_by_name['GetTimeoutResponse'] = _GETTIMEOUTRESPONSE
DESCRIPTOR.message_types_by_name['SetPseudonymRequest'] = _SETPSEUDONYMREQUEST
DESCRIPTOR.message_types_by_name['SetPseudonymResponse'] = _SETPSEUDONYMRESPONSE
DESCRIPTOR.message_types_by_name['GetUserTokenResponse'] = _GETUSERTOKENRESPONSE
DESCRIPTOR.message_types_by_name['UserRegistrationRequest'] = _USERREGISTRATIONREQUEST
DESCRIPTOR.message_types_by_name['UserRegistrationResponse'] = _USERREGISTRATIONRESPONSE
DESCRIPTOR.message_types_by_name['GroupRegistrationRequest'] = _GROUPREGISTRATIONREQUEST
DESCRIPTOR.message_types_by_name['GroupRegistrationResponse'] = _GROUPREGISTRATIONRESPONSE
DESCRIPTOR.message_types_by_name['DirectChallenge'] = _DIRECTCHALLENGE
DESCRIPTOR.message_types_by_name['MatchmakingParameter'] = _MATCHMAKINGPARAMETER
DESCRIPTOR.message_types_by_name['MatchRequest'] = _MATCHREQUEST
DESCRIPTOR.message_types_by_name['MatchResponse'] = _MATCHRESPONSE
DESCRIPTOR.message_types_by_name['TurnRequest'] = _TURNREQUEST
DESCRIPTOR.message_types_by_name['TurnResponse'] = _TURNRESPONSE
DESCRIPTOR.message_types_by_name['GameStateResponse'] = _GAMESTATERESPONSE
DESCRIPTOR.message_types_by_name['EloValues'] = _ELOVALUES
DESCRIPTOR.message_types_by_name['OpponentInfoResponse'] = _OPPONENTINFORESPONSE
DESCRIPTOR.message_types_by_name['Nothing'] = _NOTHING
DESCRIPTOR.enum_types_by_name['TurnStatus'] = _TURNSTATUS
DESCRIPTOR.enum_types_by_name['GameStatus'] = _GAMESTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AuthPacket = _reflection.GeneratedProtocolMessageType('AuthPacket', (_message.Message,), {
  'DESCRIPTOR' : _AUTHPACKET,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.AuthPacket)
  })
_sym_db.RegisterMessage(AuthPacket)

MatchIDPacket = _reflection.GeneratedProtocolMessageType('MatchIDPacket', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIDPACKET,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.MatchIDPacket)
  })
_sym_db.RegisterMessage(MatchIDPacket)

IDPacket = _reflection.GeneratedProtocolMessageType('IDPacket', (_message.Message,), {
  'DESCRIPTOR' : _IDPACKET,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.IDPacket)
  })
_sym_db.RegisterMessage(IDPacket)

GetTimeoutResponse = _reflection.GeneratedProtocolMessageType('GetTimeoutResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTIMEOUTRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.GetTimeoutResponse)
  })
_sym_db.RegisterMessage(GetTimeoutResponse)

SetPseudonymRequest = _reflection.GeneratedProtocolMessageType('SetPseudonymRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPSEUDONYMREQUEST,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.SetPseudonymRequest)
  })
_sym_db.RegisterMessage(SetPseudonymRequest)

SetPseudonymResponse = _reflection.GeneratedProtocolMessageType('SetPseudonymResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETPSEUDONYMRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.SetPseudonymResponse)
  })
_sym_db.RegisterMessage(SetPseudonymResponse)

GetUserTokenResponse = _reflection.GeneratedProtocolMessageType('GetUserTokenResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETUSERTOKENRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.GetUserTokenResponse)
  })
_sym_db.RegisterMessage(GetUserTokenResponse)

UserRegistrationRequest = _reflection.GeneratedProtocolMessageType('UserRegistrationRequest', (_message.Message,), {
  'DESCRIPTOR' : _USERREGISTRATIONREQUEST,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.UserRegistrationRequest)
  })
_sym_db.RegisterMessage(UserRegistrationRequest)

UserRegistrationResponse = _reflection.GeneratedProtocolMessageType('UserRegistrationResponse', (_message.Message,), {
  'DESCRIPTOR' : _USERREGISTRATIONRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.UserRegistrationResponse)
  })
_sym_db.RegisterMessage(UserRegistrationResponse)

GroupRegistrationRequest = _reflection.GeneratedProtocolMessageType('GroupRegistrationRequest', (_message.Message,), {
  'DESCRIPTOR' : _GROUPREGISTRATIONREQUEST,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.GroupRegistrationRequest)
  })
_sym_db.RegisterMessage(GroupRegistrationRequest)

GroupRegistrationResponse = _reflection.GeneratedProtocolMessageType('GroupRegistrationResponse', (_message.Message,), {
  'DESCRIPTOR' : _GROUPREGISTRATIONRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.GroupRegistrationResponse)
  })
_sym_db.RegisterMessage(GroupRegistrationResponse)

DirectChallenge = _reflection.GeneratedProtocolMessageType('DirectChallenge', (_message.Message,), {
  'DESCRIPTOR' : _DIRECTCHALLENGE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.DirectChallenge)
  })
_sym_db.RegisterMessage(DirectChallenge)

MatchmakingParameter = _reflection.GeneratedProtocolMessageType('MatchmakingParameter', (_message.Message,), {
  'DESCRIPTOR' : _MATCHMAKINGPARAMETER,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.MatchmakingParameter)
  })
_sym_db.RegisterMessage(MatchmakingParameter)

MatchRequest = _reflection.GeneratedProtocolMessageType('MatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _MATCHREQUEST,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.MatchRequest)
  })
_sym_db.RegisterMessage(MatchRequest)

MatchResponse = _reflection.GeneratedProtocolMessageType('MatchResponse', (_message.Message,), {
  'DESCRIPTOR' : _MATCHRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.MatchResponse)
  })
_sym_db.RegisterMessage(MatchResponse)

TurnRequest = _reflection.GeneratedProtocolMessageType('TurnRequest', (_message.Message,), {
  'DESCRIPTOR' : _TURNREQUEST,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.TurnRequest)
  })
_sym_db.RegisterMessage(TurnRequest)

TurnResponse = _reflection.GeneratedProtocolMessageType('TurnResponse', (_message.Message,), {
  'DESCRIPTOR' : _TURNRESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.TurnResponse)
  })
_sym_db.RegisterMessage(TurnResponse)

GameStateResponse = _reflection.GeneratedProtocolMessageType('GameStateResponse', (_message.Message,), {
  'DESCRIPTOR' : _GAMESTATERESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.GameStateResponse)
  })
_sym_db.RegisterMessage(GameStateResponse)

EloValues = _reflection.GeneratedProtocolMessageType('EloValues', (_message.Message,), {
  'DESCRIPTOR' : _ELOVALUES,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.EloValues)
  })
_sym_db.RegisterMessage(EloValues)

OpponentInfoResponse = _reflection.GeneratedProtocolMessageType('OpponentInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _OPPONENTINFORESPONSE,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.OpponentInfoResponse)
  })
_sym_db.RegisterMessage(OpponentInfoResponse)

Nothing = _reflection.GeneratedProtocolMessageType('Nothing', (_message.Message,), {
  'DESCRIPTOR' : _NOTHING,
  '__module__' : 'netcode_pb2'
  # @@protoc_insertion_point(class_scope:netcode.Nothing)
  })
_sym_db.RegisterMessage(Nothing)



_GAMECOM = _descriptor.ServiceDescriptor(
  name='GameCom',
  full_name='netcode.GameCom',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=3321,
  serialized_end=4174,
  methods=[
  _descriptor.MethodDescriptor(
    name='NewMatch',
    full_name='netcode.GameCom.NewMatch',
    index=0,
    containing_service=None,
    input_type=_MATCHREQUEST,
    output_type=_MATCHRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SubmitTurn',
    full_name='netcode.GameCom.SubmitTurn',
    index=1,
    containing_service=None,
    input_type=_TURNREQUEST,
    output_type=_TURNRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGameState',
    full_name='netcode.GameCom.GetGameState',
    index=2,
    containing_service=None,
    input_type=_MATCHIDPACKET,
    output_type=_GAMESTATERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTimeout',
    full_name='netcode.GameCom.GetTimeout',
    index=3,
    containing_service=None,
    input_type=_MATCHIDPACKET,
    output_type=_GETTIMEOUTRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetOpponentInfo',
    full_name='netcode.GameCom.GetOpponentInfo',
    index=4,
    containing_service=None,
    input_type=_MATCHIDPACKET,
    output_type=_OPPONENTINFORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AbortMatch',
    full_name='netcode.GameCom.AbortMatch',
    index=5,
    containing_service=None,
    input_type=_MATCHIDPACKET,
    output_type=_NOTHING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetElo',
    full_name='netcode.GameCom.GetElo',
    index=6,
    containing_service=None,
    input_type=_IDPACKET,
    output_type=_ELOVALUES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UserRegistration',
    full_name='netcode.GameCom.UserRegistration',
    index=7,
    containing_service=None,
    input_type=_USERREGISTRATIONREQUEST,
    output_type=_USERREGISTRATIONRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GroupRegistration',
    full_name='netcode.GameCom.GroupRegistration',
    index=8,
    containing_service=None,
    input_type=_GROUPREGISTRATIONREQUEST,
    output_type=_GROUPREGISTRATIONRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetGroupPseudonym',
    full_name='netcode.GameCom.SetGroupPseudonym',
    index=9,
    containing_service=None,
    input_type=_SETPSEUDONYMREQUEST,
    output_type=_SETPSEUDONYMRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetUserPseudonym',
    full_name='netcode.GameCom.SetUserPseudonym',
    index=10,
    containing_service=None,
    input_type=_SETPSEUDONYMREQUEST,
    output_type=_SETPSEUDONYMRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetUserToken',
    full_name='netcode.GameCom.GetUserToken',
    index=11,
    containing_service=None,
    input_type=_AUTHPACKET,
    output_type=_GETUSERTOKENRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GAMECOM)

DESCRIPTOR.services_by_name['GameCom'] = _GAMECOM

# @@protoc_insertion_point(module_scope)
